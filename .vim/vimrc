" SPDX-FileCopyrightText: 2023-2024 Jason Pena <jasonpena@awkless.com>
" SPDX-LicenseIdentifier: MIT

" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
" | General Settings                                                          |
" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

" Tiny-ViM does not have "eval".
if has("eval")
    let skip_defaults_vim = 1
endif

" Do not enforce Vi compatibility.
set nocompatible

" Enable filetype plugins.
filetype plugin on
filetype indent on

" Set to auto read when a file is modified form the outside...
set autoread
au FocusGained,BufEnter * checktime

" Establish default file settings.
let $LANG = 'en'
set langmenu=en
set encoding=utf8
set ffs=unix,dos,mac

" Set history size and cursor position.
set history=1000
set scrolloff=999

" Search settings.
set smartcase
set hlsearch
set incsearch
set magic
set lazyredraw
set wrapscan

" Highlight trailing whitespace.
match IncSearch '\s\+$'

" Bracket settings.
set showmatch
set mat=3

" Remove annoying error sounds.
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Disable backup features.
set nobackup
set nowb
set noswapfile

" Disable mouse.
set mouse=
set ttymouse=

" Stop complaints about switching buffer with changes.
set hidden

" Faster scrolling.
set ttyfast

" Make backspace more natural.
set backspace=indent,eol,start

" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
" | Plugin Management                                                         |
" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

" Install vim-plug if not found...
if empty(glob("$XDG_CONFIG_HOME/vim/autoload/plug.vim"))
    silent !curl -fLo "$XDG_CONFIG_HOME/vim/autoload/plug.vim" --create-dirs
        \ "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
endif

" Run PlugInstall if there are missing plugins...
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
    \| PlugInstall --sync | source $MYVIMRC
    \| endif

" Plugins list...
if filereadable(expand("~/.vim/autoload/plug.vim"))
    call plug#begin('~/.local/share/vim/plugins')
    Plug 'jeffkreeftmeijer/vim-dim'
    Plug 'noahfrederick/vim-noctu'
    Plug 'tpope/vim-fugitive'
    Plug 'tpope/vim-commentary'
    Plug 'iamyifan/vim-close-current-buffer'
    Plug 'airblade/vim-gitgutter'
    Plug 'jreybert/vimagit'
    call plug#end()
endif

" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
" | UI Options                                                                |
" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

" Hail the 80 character limit!
set textwidth=80
set colorcolumn=80
set nonumber
set cursorline
set signcolumn=yes

" Configure command completion.
set wildmenu
set wildmode=longest:full,full
set wildoptions=pum

" Configure colorscheme.
syntax on
set background=dark
set t_Co=256
try
    colorscheme astrotty
catch
    colorscheme default
endtry

" Fold settings..
set foldmethod=marker
set nofoldenable

" Make splits more natural.
set splitbelow
set splitright

" Show current mode and commands.
set showmode
set showcmd
set cmdheight=1

" Configure statusline.
set laststatus=2
set ruler

" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
" | Keymappings                                                               |
" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

" Set mapleader...
let mapleader = ","
map , #

" Use 'jj' as alternate form of entering normal mode.
map! jj 

" Move through args.
map <leader>al :w:n
map <leader>ah :w:N

" Split window.
map <leader>hs :split
map <leader>vs :vsplit

" Window movement...
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
map <C-e> <C-W>=

" Buffer mappings...
nmap <leader>bo :enew<cr>
nmap <leader>bd :Bclose<cr>
nmap <leader>ba :bufdo bd<cr>
nmap <leader>bl :bnext<cr>
nmap <leader>bh :bprevious<cr>

" Tab mappings...
nmap <leader>tn :tabnew<space>
nmap <leader>to :tabonly<cr>
nmap <leader>tc :tabclose<cr>
nmap <leader>tm :tabmove<space>
nmap <leader>tl :tabnext<cr>
nmap <leader>th :tabprevious<cr>

" Move to current directory of file...
nmap <leader>cd :cd %:p:h<cr>:pwd<cr>

" Toggle paste mode...
nmap <leader>pp :setlocal paste!<cr>

" Jump between hunks for git gutter...
nmap <leader>gh <Plug>GitGutterNextHunk
nmap <leader>gl <Plug>GitGutterPrevHunk
nmap <leader>ga <Plug>GitGutterStageHunk
nmap <leader>gu <Plug>GitGutterUndoHunk

" Spell checking...
nmap <leader>ss :setlocal spell!<cr>
nmap <leader>sl ]s
nmap <leader>sh [s
nmap <leader>sa zg
nmap <leader>sc z=

" Use TAB to access secondary functions (primarily filters and toggles).
map 	 #Z

" TAB n  Toggles between number and nonumber.
map @NU@ :set nu:map #Zn @NONU@:"--- line numbers on ---"
map @NONU@ :set nonu:map #Zn @NU@:"--- line numbers off ---"
map #Zn @NU@

" TAB l  Toggles between list and nolist.
map @LIST@ :set list:map #Zl @NOLIST@:"--- list on ---"
map @NOLIST@ :set nolist:map #Zl @LIST@:"--- list off ---"
map #Zl @LIST@

" TAB i  Toggles between ignorecase and noignorecase.
map @IC@ :set ic:map #Zi @NOIC@:"--- case insensitive ---"
map @NOIC@ :set noic:map #Zi @IC@:"--- case sensitive ---"
map #Zi @NOIC@

" TAB a  Toggle between autoindent and noautoindent.
map @AI@ :set ai:map #Za @NOAI@:"--- autoindent on ---"
map @NOAI@ :set noai:map #Za @AI@:"--- autoindent off ---"
map #Za @NOAI@

" TAB h  Turn of search highlight.
map @NOHL@ :nohl:"--- turn off search highlight ---"
map #Zh @NOHL@
